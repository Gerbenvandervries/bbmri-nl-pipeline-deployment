
---
#
# Lua.
#
- name: Download Lua.
  get_url:
    url: "http://sourceforge.net/projects/lmod/files/lua-{{ easybuild_lua_version }}.tar.bz2/download"
    dest: "{{ easybuild_sources_dir }}/l/Lua/lua-{{ easybuild_lua_version }}.tar.bz2"
    mode: "{{ MODE_0664_HARD }}"
    checksum: 'md5:a8d0443fe79fc4e9aaded057d81304cd' # 5.1.4.9
    timeout: 60
    validate_certs: no # Sourceforge redirects to https and this fails when Python on the target host is version <= 2.6.6.
- name: Decompress Lua.
  unarchive:
    src:  "{{ easybuild_sources_dir }}/l/Lua/lua-{{ easybuild_lua_version }}.tar.bz2"
    dest: "{{ easybuild_sources_dir }}/l/Lua/"
    copy: no
    mode: "{{ MODE__775_SOFT }}"
- name: Compile and install Lua
  shell: |
         cd {{ easybuild_sources_dir }}/l/Lua/lua-{{ easybuild_lua_version }}
         umask 0002
         ./configure --with-static=yes \
                     --prefix={{ easybuild_software_dir }}/Lua/{{ easybuild_lua_version }} \
             && make install

#
# Lmod.
#
- name: Download Lmod.
  get_url:
    url: "https://github.com/TACC/Lmod/archive/{{ easybuild_lmod_version }}.tar.gz"
    dest: "{{ easybuild_sources_dir }}/l/Lmod/{{ easybuild_lmod_version }}.tar.gz"
    checksum: 'md5:a2ea3c83f08d4175f08f84ac2a9bd508'
    mode: "{{ MODE_0664_HARD }}"
- name: Decompress Lmod.
  unarchive:
    src:  "{{ easybuild_sources_dir }}/l/Lmod/{{ easybuild_lmod_version }}.tar.gz"
    dest: "{{ easybuild_sources_dir }}/l/Lmod/"
    copy: no
    mode: "{{ MODE__775_SOFT }}"
- name: Compile and install Lmod.
  shell: |
         export PATH={{ easybuild_software_dir }}/Lua/{{ easybuild_lua_version }}/bin:$PATH
         cd {{ easybuild_sources_dir }}/l/Lmod/Lmod-{{ easybuild_lmod_version }}
         umask 0002
         ./configure --prefix={{ easybuild_software_dir }} \
                     --with-lua-include={{ easybuild_software_dir }}/Lua/{{ easybuild_lua_version }}/include \
                     --with-mpathSearch=YES \
                     --with-caseIndependentSorting=YES \
             && make install

#
# EasyBuild.
#
- name: Download EasyBuild bootstrap script and deps for offline bootstrapping.
  get_url: url="{{ item.url }}" dest="{{ item.dest }}" checksum="{{ item.checksum }}" mode="{{ MODE_0664_HARD }}"
  with_items:
    - url: 'https://raw.githubusercontent.com/easybuilders/easybuild-framework/ddfa7e0cdff778a1d270efd29a2af02830bcca2b/easybuild/scripts/bootstrap_eb.py'
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/bootstrap_eb_{{ easybuild_bs_version }}.py"
      checksum: 'md5:b970595c701de1ddda0cb8f83448f1f4'
    - url: 'https://pypi.python.org/packages/82/ec/19d85d2bb91b562195d00db9ac82d7529904e7eabc0597720966bf74714f/vsc-install-0.10.26.tar.gz#md5=c4eb3146d1c56015e43193efb6f65c0f'
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: 'md5:c4eb3146d1c56015e43193efb6f65c0f'
    - url: ' https://pypi.python.org/packages/f7/66/1ff7ecc4a93ba37e063f5bfbe395e95a547b1dec73b017c2724f4475a958/vsc-base-2.5.8.tar.gz#md5=57f3f49eab7aa15a96be76e6c89a72d8'
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: 'md5:57f3f49eab7aa15a96be76e6c89a72d8'
    - url: 'https://pypi.python.org/packages/f0/23/4edb6a97f8d7712687e851ee0c3fc0b471b6829a0c9b15bb2dd5533c9d05/easybuild-framework-3.4.1.tar.gz#md5=1f10ad23ecdc0098e0ec11322afb1c99'
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: 'md5:1f10ad23ecdc0098e0ec11322afb1c99'
    - url: 'https://pypi.python.org/packages/f7/b0/61f52e6f99c71a289352d3e5071300d340306f4a96f0301bc64ee4f5d433/easybuild-easyblocks-3.4.1.tar.gz#md5=cadc9fb4f4a8ebfd541fefb79fafe732'
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: 'md5:cadc9fb4f4a8ebfd541fefb79fafe732'
    - url: 'https://pypi.python.org/packages/7f/f7/bbfd15f8c2eab776538c5baa98ad616d519709d6b6b0f47002848069aa33/easybuild-easyconfigs-3.4.1.tar.gz#md5=8bbfaeddfc4c77d41c29730b68b5909b'
      dest: "{{ easybuild_sources_dir }}/e/EasyBuild/"
      checksum: 'md5:8bbfaeddfc4c77d41c29730b68b5909b'
- name: Install latest EasyBuild version with bootstrap script.
  #
  # Ansible doesn't run task in a login shell, so we have to source the EasyBuild config manually.
  #
  shell: |
         source ~/.modulesrc
         umask 0002
         export EASYBUILD_BOOTSTRAP_SOURCEPATH="{{ easybuild_sources_dir }}/e/EasyBuild/"
         python {{ easybuild_sources_dir }}/e/EasyBuild/bootstrap_eb_{{ easybuild_bs_version }}.py {{ HPC_ENV_PREFIX }}
- name: Check if the required EasyBuild version is installed.
  shell: |
         source ~/.modulesrc >/dev/null 2>&1
         module load EasyBuild/{{ easybuild_eb_version }}
         eb --version 2>&1 | head -1 | sed 's|^This is EasyBuild \([0-9\.]*\).*$|\1|'
  args:
    executable: /bin/bash
    warn: no
  changed_when: false
  failed_when: false
  check_mode: no
  register: eb_installed_version
- name: Determine if the required EasyBuild version needs to be installed.
  set_fact:
    eb_install_from_source: true
  when: 'eb_installed_version|failed or (eb_installed_version.stdout | version_compare(easybuild_eb_version, operator="!="))'
- name: Report EasyBuild status.
  debug:
    msg: 'Will install the required EasyBuild version with the latest EasyBuild version as the bootstrapped version is not the requested version. (Detected {{ eb_installed_version.stdout }} and need {{ easybuild_eb_version }}.)'
  when: eb_install_from_source|default(false)
- name: Install required EasyBuild version with EasyBuild.
  shell: |
         source ~/.modulesrc
         umask 0002
         module load EasyBuild
         eb --software="EasyBuild,{{ easybuild_eb_version }}"
  when: eb_install_from_source|default(false)

